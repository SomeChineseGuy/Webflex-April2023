import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { PrismaClient } from '@prisma/client'
import { useState } from 'react'
import Link from 'next/link'
import axios from 'axios'

// Front End 
export default function Home({urls}) {
  const [urlsState, setUrlsState ] = useState(urls)
  const handleDelete = async (item, idx) => {
    // Deleting in the back end
    await axios.delete('/api/url', {data: {item}})
    // Deleting in the front end
    const newArr = urlsState.filter((innerItem, innerIdx) => {
      if(innerIdx !== idx) {
        return innerItem
      }
    })
    setUrlsState(newArr)
  }

  const handleEdit = () => {
    
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Welcome to Tiny App</h1>
      {urlsState.map((item, idx) => {
        return (
          <div key={idx} className={styles.urlContainer}>
            <Link href={`/u/${item.shortUrl}`}>
              <p>LongUrl - <strong>{item.longUrl}</strong></p>
            </Link>
            <Link href={`/u/${item.shortUrl}`}>
              <p>ShortUrl - <strong>{item.shortUrl}</strong></p>
            </Link>

            <button className={styles.edit} onClick={handleEdit}>Edit</button>
            <button className={styles.delete} onClick={()=> handleDelete(item, idx)}>Delete</button>
          </div>
        )
      })}
    </div>
  )
}

// Back End
// getServerSideProps - everytime you go to this page it will request NEW data
// getStaticProps - when you build your website, it will pull the data ONE time
export async function getServerSideProps() {
  //Connect
  const prisma = new PrismaClient()
  // Get the data
  const urls = await prisma.url.findMany()

  // Disconnect
  await prisma.$disconnect()
  return {
    props: {
      urls
    }
  }
}


/*
app.post(/url/:id/delete)
app.post(/url/:id/edit)
app.post(/url/:id)
=========
app.delete(/api/url)
app.put(/api/url)
app.post(/api/url)
*/